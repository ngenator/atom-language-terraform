scopeName: "source.terraform"
name: "Terraform"
comment: "Terraform language"
fileTypes: [
  "tf"
]
foldingStartMarker: "\\{\\s*$"
foldingStopMarker: "^\\s*\\}"
patterns: [
  include: "#comments"
  ,
    include: "#brackets"
  ,
    include: "#delimiters"
  ,
    include: "#constants"
  ,
    include: "#strings"
  ,
    include: "#heredocs"
  ,
    include: "#sections"
]
repository:
  comments:
    patterns: [
      begin: "#"
      beginCaptures:
        "0":
          name: "punctuation.definition.comment.terraform"
      end: "$"
      name: "comment.line.number-sign.terraform"
      ,
        begin: "//"
        beginCaptures:
          "0":
            name: "punctuation.definition.comment.terraform"
        end: "$"
        name: "comment.line.double-slash.terraform"
      ,
        begin: "/\\*"
        end: "\\*/"
        captures:
          "0":
            name: "punctuation.definition.comment.terraform"
        name: "comment.block.terraform"
    ]
  brackets:
    patterns: [
      begin: "{"
      beginCaptures:
        "0":
          name: "punctuation.definition.begin.bracket.curly.terraform"
      end: "}"
      endCaptures:
        "0":
          name: "punctuation.definition.end.bracket.curly.terraform"
      patterns: [
        include: "$self"
        ,
          include: "#variables"
      ]
      ,
        begin: "\\("
        beginCaptures:
          "0":
            name: "punctuation.definition.begin.bracket.round.terraform"
        end: "\\)"
        endCaptures:
          "0":
            name: "punctuation.definition.end.bracket.round.terraform"
        patterns: [
          include: "$self"
        ]
      ,
        match: "\\[|\\]"
        name: "punctuation.definition.bracket.square.terraform"
    ]
  delimiters:
    patterns: [
      match: ","
      name: "punctuation.other.comma.terraform"
      ,
        match: "\\."
        name: "punctuation.other.period.terraform"
    ]
  operators:
    patterns: [
      match: "=="
      name: "keyword.operator.equality.terraform"
      ,
        match: "\\?"
        name: "keyword.operator.ternary.terraform"
      ,
        match: ":"
        name: "keyword.operator.colon.terraform"
    ]
  constants:
    patterns: [
      match: "\\b(true|false)\\b"
      name: "constant.language.terraform"
      ,
        match: "\\b\\d+[kKmMgG]?b?\\b"
        name: "constant.numeric"
    ]
  variables:
    patterns: [
      match: "(\\w+)(?=\\s*(=|{))"
      name: "meta.parameter"
      captures:
        "0":
          patterns: [
            match: "\\d\\w*"
            name: "invalid.illegal.identifier.terraform"
            ,
              match: "\\w+"
              name: "variable.parameter.terraform"
          ]
    ]
  keywords:
    patterns: [
      match: "\\b(source|count|lifecycle)\\b"
      name: "keyword.other.terraform"
    ]
  strings:
    patterns: [
      comment: "Interpreted string literals"
      begin: "\""
      beginCaptures:
        "0":
          name: "punctuation.definition.string.begin.terraform"
      end: "(?<!\\\\)\""
      endCaptures:
        "0":
          name: "punctuation.definition.string.end.terraform"
      name: "string.quoted.double.terraform"
      patterns: [
        begin: "\\${"
        beginCaptures:
          "0":
            name: "constant.other.punctuation.interpolation.begin.terraform"
        end: "\\}"
        endCaptures:
          "0":
            name: "constant.other.punctuation.interpolation.end.terraform"
        name: "string.interpolated.terraform"
        patterns: [
          include: "$self"
          ,
            include: "#interpolation"
        ]
      ]
    ]
  heredocs:
    patterns: [
      {
        begin: "<<(\\w*JSON)$"
        beginCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        end: "^(\\1)$"
        endCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        contentName: "string.unquoted.heredoc.terraform"
        patterns: [
          include: "source.json"
        ]
      }
      {
        begin: "<<(\\w*YA?ML)$"
        beginCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        end: "^(\\1)$"
        endCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        contentName: "string.unquoted.heredoc"
        patterns: [
          include: "source.yaml"
        ]
      }
      {
        begin: "<<(\\w*XML)$"
        beginCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        end: "^(\\1)$"
        endCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        contentName: "string.unquoted.heredoc.terraform"
        patterns: [
          include: "source.xml"
        ]
      }
      {
        begin: "<<(\\w*SH)$"
        beginCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        end: "^(\\1)$"
        endCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        contentName: "string.unquoted.heredoc.terraform"
        patterns: [
          include: "source.shell"
        ]
      }
      {
        begin: "<<(\\w+)$"
        beginCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        end: "^(\\1)$"
        endCaptures:
          "1":
            name: "keyword.control.heredoc-token.terraform"
        contentName: "string.unquoted.heredoc.terraform"
        patterns: [
          include: "#interpolation"
        ]
      }
    ]
  sections:
    patterns: [
      begin: "^\\b(\\w+)\\b\\s*\"([\\w-]+)\"\\s*\\{"
      beginCaptures:
        "1":
          patterns: [
            match: "\\bvariable\\b"
            name: "storage.type.var.terraform"
            ,
              match: "\\bmodule\\b"
              name: "storage.type.module.terraform"
            ,
              match: "\\bprovider\\b"
              name: "storage.type.provider.terraform"
            ,
              match: "\\boutput\\b"
              name: "storage.type.output.terraform"
            ,
              match: "\\w+"
              name: "invalid.illegal.type.terraform"
          ]
        "2":
          name: "entity.name.type.terraform"
      end: "\\}"
      name: "meta.section.terraform"
      patterns: [
        include: "$base"
        ,
          include: "#keywords"
      ]
      ,
        begin: "^\\b(\\w+)\\b\\s*\\{"
        beginCaptures:
          "1":
            patterns: [
              match: "\\blocals\\b"
              name: "storage.type.locals.terraform"
              ,
                match: "\\bterraform\\b"
                name: "storage.type.terraform"
              ,
                match: "\\w+"
                name: "invalid.illegal.type.terraform"
            ]
        end: "\\}"
        name: "meta.section.terraform"
        patterns: [
          include: "$self"
          ,
            include: "#variables"
        ]
      ,
        begin: "^\\b(\\w+)\\b\\s*\"([\\w-]+)\"\\s*\\s*\"([\\w-]+)\"\\s*\\{"
        beginCaptures:
          "1":
            patterns: [
              match: "\\bresource\\b"
              name: "storage.type.resource.terraform"
              ,
                match: "\\bdata\\b"
                name: "storage.type.data.terraform"
              ,
                match: "\\w+"
                name: "invalid.illegal.type.terraform"
            ]
          "2":
            name: "entity.name.type.terraform"
          "3":
            name: "variable.parameter.terraform"
        end: "\\}"
        name: "meta.section"
        patterns: [
          include: "$base"
          ,
            include: "#keywords"
        ]
    ]
  interpolation:
    patterns: [
      include: "#constants"
      ,
        include: "#operators"
      ,
        include: "#strings"
      ,
        match: "\\b(aws_(?:acm_certificate|acm_certificate_validation|alb|alb_listener|alb_listener_certificate|alb_listener_rule|alb_target_group|alb_target_group_attachment|ami|ami_copy|ami_from_instance|ami_launch_permission|api_gateway_account|api_gateway_api_key|api_gateway_authorizer|api_gateway_base_path_mapping|api_gateway_client_certificate|api_gateway_deployment|api_gateway_documentation_part|api_gateway_documentation_version|api_gateway_domain_name|api_gateway_gateway_response|api_gateway_integration|api_gateway_integration_response|api_gateway_method|api_gateway_method_response|api_gateway_method_settings|api_gateway_model|api_gateway_resource|api_gateway_rest_api|api_gateway_stage|api_gateway_usage_plan|api_gateway_usage_plan_key|api_gateway_vpc_link|app_cookie_stickiness_policy|appautoscaling_policy|appautoscaling_scheduled_action|appautoscaling_target|appsync_graphql_api|athena_database|athena_named_query|autoscaling_attachment|autoscaling_group|autoscaling_lifecycle_hook|autoscaling_notification|autoscaling_policy|autoscaling_schedule|batch_compute_environment|batch_job_definition|batch_job_queue|cloud9_environment_ec2|cloudformation_stack|cloudfront_distribution|cloudfront_origin_access_identity|cloudtrail|cloudwatch_dashboard|cloudwatch_event_permission|cloudwatch_event_rule|cloudwatch_event_target|cloudwatch_log_destination|cloudwatch_log_destination_policy|cloudwatch_log_group|cloudwatch_log_metric_filter|cloudwatch_log_resource_policy|cloudwatch_log_stream|cloudwatch_log_subscription_filter|cloudwatch_metric_alarm|codebuild_project|codecommit_repository|codecommit_trigger|codedeploy_app|codedeploy_deployment_config|codedeploy_deployment_group|codepipeline|cognito_identity_pool|cognito_identity_pool_roles_attachment|cognito_user_group|cognito_user_pool|cognito_user_pool_client|cognito_user_pool_domain|config_config_rule|config_configuration_recorder|config_configuration_recorder_status|config_delivery_channel|customer_gateway|dax_cluster|db_event_subscription|db_instance|db_option_group|db_parameter_group|db_security_group|db_snapshot|db_subnet_group|default_network_acl|default_route_table|default_security_group|default_subnet|default_vpc|default_vpc_dhcp_options|devicefarm_project|directory_service_directory|dms_certificate|dms_endpoint|dms_replication_instance|dms_replication_subnet_group|dms_replication_task|dx_connection|dx_connection_association|dx_lag|dynamodb_global_table|dynamodb_table|dynamodb_table_item|ebs_snapshot|ebs_volume|ecr_lifecycle_policy|ecr_repository|ecr_repository_policy|ecs_cluster|ecs_service|ecs_task_definition|efs_file_system|efs_mount_target|egress_only_internet_gateway|eip|eip_association|elastic_beanstalk_application|elastic_beanstalk_application_version|elastic_beanstalk_configuration_template|elastic_beanstalk_environment|elasticache_cluster|elasticache_parameter_group|elasticache_replication_group|elasticache_security_group|elasticache_subnet_group|elasticsearch_domain|elasticsearch_domain_policy|elastictranscoder_pipeline|elastictranscoder_preset|elb|elb_attachment|emr_cluster|emr_instance_group|emr_security_configuration|flow_log|gamelift_alias|gamelift_build|gamelift_fleet|glacier_vault|glue_catalog_database|guardduty_detector|guardduty_ipset|guardduty_member|guardduty_threatintelset|iam_access_key|iam_account_alias|iam_account_password_policy|iam_group|iam_group_membership|iam_group_policy|iam_group_policy_attachment|iam_instance_profile|iam_openid_connect_provider|iam_policy|iam_policy_attachment|iam_role|iam_role_policy|iam_role_policy_attachment|iam_saml_provider|iam_server_certificate|iam_user|iam_user_login_profile|iam_user_policy|iam_user_policy_attachment|iam_user_ssh_key|inspector_assessment_target|inspector_assessment_template|inspector_resource_group|instance|internet_gateway|iot_certificate|iot_policy|iot_thing|iot_thing_type|iot_topic_rule|key_pair|kinesis_firehose_delivery_stream|kinesis_stream|kms_alias|kms_key|lambda_alias|lambda_event_source_mapping|lambda_function|lambda_permission|launch_configuration|lb|lb_cookie_stickiness_policy|lb_listener|lb_listener_certificate|lb_listener_rule|lb_ssl_negotiation_policy|lb_target_group|lb_target_group_attachment|lightsail_domain|lightsail_instance|lightsail_key_pair|lightsail_static_ip|lightsail_static_ip_attachment|load_balancer_backend_server_policy|load_balancer_listener_policy|load_balancer_policy|main_route_table_association|media_store_container|mq_broker|mq_configuration|nat_gateway|network_acl|network_acl_rule|network_interface|network_interface_attachment|network_interface_sg_attachment|opsworks_application|opsworks_custom_layer|opsworks_ganglia_layer|opsworks_haproxy_layer|opsworks_instance|opsworks_java_app_layer|opsworks_memcached_layer|opsworks_mysql_layer|opsworks_nodejs_app_layer|opsworks_permission|opsworks_php_app_layer|opsworks_rails_app_layer|opsworks_rds_db_instance|opsworks_stack|opsworks_static_web_layer|opsworks_user_profile|organizations_organization|placement_group|proxy_protocol_policy|rds_cluster|rds_cluster_instance|rds_cluster_parameter_group|redshift_cluster|redshift_parameter_group|redshift_security_group|redshift_subnet_group|route|route53_delegation_set|route53_health_check|route53_query_log|route53_record|route53_zone|route53_zone_association|route_table|route_table_association|s3_bucket|s3_bucket_metric|s3_bucket_notification|s3_bucket_object|s3_bucket_policy|security_group|security_group_rule|service_discovery_private_dns_namespace|service_discovery_public_dns_namespace|service_discovery_service|servicecatalog_portfolio|ses_active_receipt_rule_set|ses_configuration_set|ses_domain_dkim|ses_domain_identity|ses_domain_mail_from|ses_event_destination|ses_receipt_filter|ses_receipt_rule|ses_receipt_rule_set|ses_template|sfn_activity|sfn_state_machine|simpledb_domain|snapshot_create_volume_permission|sns_platform_application|sns_topic|sns_topic_policy|sns_topic_subscription|spot_datafeed_subscription|spot_fleet_request|spot_instance_request|sqs_queue|sqs_queue_policy|ssm_activation|ssm_association|ssm_document|ssm_maintenance_window|ssm_maintenance_window_target|ssm_maintenance_window_task|ssm_parameter|ssm_patch_baseline|ssm_patch_group|ssm_resource_data_sync|subnet|volume_attachment|vpc|vpc_dhcp_options|vpc_dhcp_options_association|vpc_endpoint|vpc_endpoint_connection_notification|vpc_endpoint_route_table_association|vpc_endpoint_service|vpc_endpoint_service_allowed_principal|vpc_endpoint_subnet_association|vpc_peering_connection|vpc_peering_connection_accepter|vpn_connection|vpn_connection_route|vpn_gateway|vpn_gateway_attachment|vpn_gateway_route_propagation|waf_byte_match_set|waf_ipset|waf_rate_based_rule|waf_rule|waf_size_constraint_set|waf_sql_injection_match_set|waf_web_acl|waf_xss_match_set|wafregional_byte_match_set|wafregional_ipset))\\b\\.(\\w+)(\\.(\\w+|\\*))+"
        captures:
          "1":
            name: "storage.type.resource.terraform"
          "2":
            name: "variable.other.terraform"
      ,
        begin: "(\\w+)\\("
        beginCaptures:
          "1":
            patterns: [
              match: "\\b(basename|base64decode|base64encode|base64sha256|base64sha512|bcrypt|ceil|chomp|cidrhost|cidrnetmask|cidrsubnet|coalesce|coalescelist|compact|concat|contains|dirname|distinct|element|file|floor|format|formatlist|index|join|jsonencode|keys|length|list|log|lookup|lower|map|matchkeys|max|merge|min|md5|pathexpand|pow|replace|sha1|sha256|sha512|signum|slice|sort|split|substr|timestamp|title|trimspace|upper|uuid|values|zipmap)\\b"
              name: "support.function.interpolation.terraform"
              ,
                match: "\\w+"
                name: "invalid.illegal.function.terraform"
            ]
        end: "\\)"
        name: "meta.function.terraform"
        patterns: [
          include: "#interpolation"
        ]
      ,
        match: "\\b(var|local|count|path)\\b\\.(\\w+)"
        captures:
          "1":
            name: "storage.type.var.terraform"
          "2":
            name: "variable.other.terraform"
      ,
        match: "\\b(data)\\b\\.(\\w+)\\.(\\w+)(\\.(\\w+|\\*))+"
        captures:
          "1":
            name: "storage.type.data.terraform"
          "2":
            name: "entity.name.type.terraform"
          "3":
            name: "variable.other.terraform"
          "4":
            name: "none"
    ]
